{"version":3,"sources":["buffer.js"],"names":[],"mappings":"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","file":"buffer.js","sourcesContent":["export const splitBuffer = (buffer, index) => {\n    const start = buffer.slice(0, index)\n    const end   = buffer.slice(index)\n    return [ start, end ]\n}\n\nexport const buffersLength = function (...args) {\n  return [].slice.call(arguments).reduce((a, b) => a + b.length , 0)\n}\n\n// dosn't work if the firs char of str is multiple times in the query\nexport const bufferFindStringIndex = (buffer, str) => {\n    var query       = new Buffer(str)\n    var queryBuffer = new Buffer(query.byteLength).fill(0)\n    var count       = 0\n    var index       = -1\n\n    const isFirstQueryLetter = c  => c === query[0]\n    const shouldBuffer       = c  => !isFirstQueryLetter(c) && !!queryBuffer[0]\n    const isQueryBufferFull  = () => count == query.length\n    const matchQuery         = () => queryBuffer.equals(query)\n    const resetQueryBuffer   = () => {\n        count  = 0\n        queryBuffer = new Buffer(query.byteLength).fill(0)\n    }\n    const calcIndex          = i => i - query.length + 1\n\n    for (var [i, c] of buffer.entries()) {\n      // buffering\n      if(isFirstQueryLetter(c)) {\n        queryBuffer.writeUInt32LE(c, 0)\n        ++count\n      } else if(shouldBuffer(c)) {\n        queryBuffer.writeUInt32LE(c, count, true)\n        ++count\n      }\n      if(isQueryBufferFull()) {\n        if(matchQuery()) {\n          index = calcIndex(i)\n          break\n        }\n        resetQueryBuffer()\n      }\n    }\n    return index\n}\n\nexport const concatBuffers = function () {\n  const args = Array.prototype.slice.call(arguments)\n  return Buffer.concat(args, buffersLength(...args))\n}\n"],"sourceRoot":"/source/"}